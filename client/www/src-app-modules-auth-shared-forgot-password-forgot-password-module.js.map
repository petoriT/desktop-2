{"version":3,"sources":["./src/app/modules/auth/shared/forgot-password/forgot-password.page.html","./src/app/modules/auth/shared/forgot-password/forgot-password.module.ts","./src/app/modules/auth/shared/forgot-password/forgot-password.page.scss","./src/app/modules/auth/shared/forgot-password/forgot-password.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,ssCAAuoC,E;;;;;;;;;;;;;;;;;;;;;;ACA7mC;AACM;AACF;AACU;AAEV;AAEe;AAE5D,yCAAyC;AACW;AAEpD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAYF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAVpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAmB;aACpB;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;;AC7BrC;AAAe,6GAA8C,2LAA2L,E;;;;;;;;;;;;;;;;;;;;ACAtM;AACkB;AAC0B;AACrD;AAQzC;IAIE,4BACU,WAAwB,EACxB,YAA4B,EAC5B,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,qCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC9C,KAAK,EAAC,CAAC,EAAE;gBACP,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBAC5C,yDAAU,CAAC,OAAO,CAAC,0FAA0F,CAAC;oBAC9G,yDAAU,CAAC,QAAQ,CAAC,CAAC;aACtB;SACF,CAAC;IACJ,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,SAAS,CACtE,aAAG;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAC,KAAK,EAAE,EAAC,IAAI,EAAE,GAAG,CAAC,OAAO,EAAC,EAAC,CAAC,CAAC;QACtE,CAAC,EACD,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAA/B,CAA+B,CACvC;IACL,CAAC;;gBAtBsB,0DAAW;gBACV,2GAAc;gBACpB,sDAAM;;IAPb,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,mQAA0C;;SAE3C,CAAC;uFAMuB,0DAAW;YACV,2GAAc;YACpB,sDAAM;OAPb,kBAAkB,CA6B9B;IAAD,yBAAC;CAAA;AA7B8B","file":"src-app-modules-auth-shared-forgot-password-forgot-password-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>forgotPassword</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <ion-item>\\r\\n      <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Enter Your Email Address\\\"></ion-input>\\r\\n      <div *ngIf=\\\"resetPasswordForm.get('email').invalid && resetPasswordForm.get('email').touched\\\">\\r\\n        <ion-text *ngIf=\\\"resetPasswordForm.get('email').errors?.required\\\" color=\\\"danger\\\"><sub>email is required</sub></ion-text>\\r\\n        <ion-text *ngIf=\\\"resetPasswordForm.get('email').errors?.maxlength\\\" color=\\\"danger\\\"><sub>email must be at most 20 Characters</sub></ion-text>\\r\\n        <ion-text *ngIf=\\\"resetPasswordForm.get('email').errors?.pattern\\\" color=\\\"danger\\\"><sub>email e.g user@host.com</sub></ion-text>\\r\\n      </div>\\r\\n    </ion-item>\\r\\n    <ion-button [disabled]=\\\"!resetPasswordForm.valid\\\"  type=\\\"submit\\\" color=\\\"tertiary\\\" >Submit</ion-button>\\r\\n  </form>\\r\\n  <ion-item>\\r\\n    <a color=\\\"medium\\\" [routerLink]=\\\"['']\\\">Go Back</a>\\r\\n  </ion-item>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ForgotPasswordPage } from './forgot-password.page';\r\n\r\n//Import Specific sub modules and include\r\nimport { ReactiveFormsModule} from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [ForgotPasswordPage]\r\n})\r\nexport class ForgotPasswordPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXV0aC9zaGFyZWQvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthApiService } from 'src/app/core-modules/services/auth/auth-api/auth-api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.page.html',\r\n  styleUrls: ['./forgot-password.page.scss'],\r\n})\r\nexport class ForgotPasswordPage implements OnInit {\r\n\r\n  private resetPasswordForm:FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private _authService: AuthApiService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.resetPasswordForm = this.formBuilder.group({\r\n      email:['',\r\n        Validators.compose([Validators.maxLength(50),\r\n        Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'),\r\n        Validators.required])\r\n      ]\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    this._authService.forgotPassword(this.resetPasswordForm.value).subscribe(\r\n      res => {\r\n        this.router.navigate(['/user/login'], {state: {data: res.message}});\r\n      },\r\n      error => console.error('Error: ', error)\r\n      )\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}